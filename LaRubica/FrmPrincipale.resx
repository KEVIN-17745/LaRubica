<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RK5CYII=
</value>
  </data>
</root>